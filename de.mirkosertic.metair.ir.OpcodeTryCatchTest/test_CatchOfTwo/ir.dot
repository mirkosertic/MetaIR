digraph {
 ordering="in";
 node0[margin="0", label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="5"><tr><td colspan="1">#0 Method</td></tr><tr><td port="prj2" bgcolor="yellow">this : Test</td></tr></table>>,shape=none, fillcolor=lightgrey, style=filled];
 node18[label="#18 Return",shape=box, fillcolor=lightgrey, style=filled];
 node17 -> node18[labeldistance=2, color=red, fontcolor=red];
 node0 -> node18[labeldistance=2, color=green, constraint=false];
 node17[label="#17 Merge : Merge12",shape=box, fillcolor=lightgrey, style=filled];
 node16 -> node17[labeldistance=2, color=red, fontcolor=red];
 node15 -> node17[labeldistance=2, color=red, fontcolor=red];
 node11 -> node17[labeldistance=2, color=red, fontcolor=red];
 node11[label="#11 LabelNode",shape=box, fillcolor=lightgrey, style=filled];
 node5 -> node11[labeldistance=2, color=red, fontcolor=red];
 node5[margin="0", label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="5"><tr><td colspan="1">#5 Catch : RuntimeException</td></tr><tr><td port="prj10" bgcolor="yellow">exception : RuntimeException</td></tr></table>>,shape=none, fillcolor=lightgrey, style=filled];
 node1 -> node5[headlabel="*0", labeldistance=2];
 node1:prj4 -> node5[labeldistance=2, color=red, fontcolor=red];
 node1[margin="0", label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="5"><tr><td colspan="4">#1 ExceptionGuard</td></tr><tr><td port="prj6" bgcolor="yellow">catch : IllegalArgumentException</td><td port="prj4" bgcolor="yellow">catch : RuntimeException</td><td port="prj9" bgcolor="yellow">default</td><td port="prj8" bgcolor="yellow">exit</td></tr></table>>,shape=none, fillcolor=lightgrey, style=filled];
 node0 -> node1[labeldistance=2, color=red, fontcolor=red];
 node14[label="#14 Merge : EndOfGuardedBlock5",shape=box, fillcolor=lightgrey, style=filled];
 node1:prj9 -> node14[labeldistance=2, color=red, fontcolor=red];
 node1:prj8 -> node14[labeldistance=2, color=red, fontcolor=red];
 node16[label="#16 Goto",shape=box, fillcolor=lightgrey, style=filled];
 node14 -> node16[labeldistance=2, color=red, fontcolor=red];
 node7[margin="0", label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="5"><tr><td colspan="1">#7 Catch : IllegalArgumentException</td></tr><tr><td port="prj12" bgcolor="yellow">exception : IllegalArgumentException</td></tr></table>>,shape=none, fillcolor=lightgrey, style=filled];
 node1 -> node7[headlabel="*0", labeldistance=2];
 node1:prj6 -> node7[labeldistance=2, color=red, fontcolor=red];
 node13[label="#13 LabelNode",shape=box, fillcolor=lightgrey, style=filled];
 node7 -> node13[labeldistance=2, color=red, fontcolor=red];
 node15[label="#15 Goto",shape=box, fillcolor=lightgrey, style=filled];
 node13 -> node15[labeldistance=2, color=red, fontcolor=red];
 node3[label="#3 int 3",shape=octagon, fillcolor=lightgreen, style=filled];
 node0 -> node3[style=dotted];
 subgraph cluster_0 {
  color=lightgray;
  node0;
  node3;
 }
 subgraph cluster_000 {
  label = "Legend";
  node [shape=point]
  {
   rank=same;
   c0 [style = invis];
   c1 [style = invis];
   c2 [style = invis];
   c3 [style = invis];
   d0 [style = invis];
   d1 [style = invis];
   d2 [style = invis];
   d3 [style = invis];
   d4 [style = invis];
   d5 [style = invis];
   d6 [style = invis];
   d7 [style = invis];
  }
  c0 -> c1 [label="Control flow", style=solid, color=red]
  c2 -> c3 [label="Control flow back edge", style=dashed, color=red]
  d0 -> d1 [label="Data flow"]
  d2 -> d3 [label="Declaration", style=dotted]
  d4 -> d5 [label="PHI Data flow", color=blue]
  d6 -> d7 [label="Memory flow", color=green]
 }

}

digraph {
 ordering="in";
 node0[margin="0", label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="5"><tr><td colspan="3">#0 Method</td></tr><tr><td port="prj2" bgcolor="yellow">arg0 : int</td><td port="prj1" bgcolor="yellow">arg1 : int</td><td port="prj3" bgcolor="yellow">arg2 : int</td></tr></table>>,shape=none, fillcolor=lightgrey, style=filled];
 node6[label="#6 Sub : int",shape=octagon, fillcolor=orange, style=filled];
 node0:prj1 -> node6[headlabel="*0", labeldistance=2];
 node0:prj3 -> node6[headlabel="*1", labeldistance=2];
 node5[label="#5 Add : int",shape=octagon, fillcolor=orange, style=filled];
 node0:prj1 -> node5[headlabel="*0", labeldistance=2];
 node0:prj3 -> node5[headlabel="*1", labeldistance=2];
 node27[label="#27 ArrayStore : int[]",shape=box, fillcolor=lightgrey, style=filled];
 node9 -> node27[headlabel="*0", labeldistance=2];
 node0:prj3 -> node27[headlabel="*1", labeldistance=2];
 node5 -> node27[headlabel="*2", labeldistance=2];
 node22 -> node27[labeldistance=2, color=green, constraint=false];
 node25:prj26 -> node27[labeldistance=2, color=red, fontcolor=red];
 node25[margin="0", label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="5"><tr><td colspan="2">#25 If</td></tr><tr><td port="prj26" bgcolor="yellow">false</td><td port="prj28" bgcolor="yellow">true</td></tr></table>>,shape=none, fillcolor=lightgrey, style=filled];
 node24 -> node25[headlabel="*0", labeldistance=2];
 node22 -> node25[labeldistance=2, color=red, fontcolor=red];
 node22[label="#22 ArrayStore : int[]",shape=box, fillcolor=lightgrey, style=filled];
 node9 -> node22[headlabel="*0", labeldistance=2];
 node0:prj1 -> node22[headlabel="*1", labeldistance=2];
 node21 -> node22[headlabel="*2", labeldistance=2];
 node9 -> node22[labeldistance=2, color=green, constraint=false];
 node16:prj18 -> node22[labeldistance=2, color=red, fontcolor=red];
 node16[margin="0", label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="5"><tr><td colspan="2">#16 If</td></tr><tr><td port="prj18" bgcolor="yellow">false</td><td port="prj17" bgcolor="yellow">true</td></tr></table>>,shape=none, fillcolor=lightgrey, style=filled];
 node15 -> node16[headlabel="*0", labeldistance=2];
 node11 -> node16[labeldistance=2, color=red, fontcolor=red];
 node11[label="#11 LoopHeader : Loop14",shape=box, fillcolor=lightgrey, style=filled];
 node7 -> node11[labeldistance=2, color=red, fontcolor=red];
 node33 -> node11[labeldistance=2, color=red, fontcolor=red, style=dashed];
 node33[label="#33 Goto",shape=box, fillcolor=lightgrey, style=filled];
 node32 -> node33[labeldistance=2, color=red, fontcolor=red];
 node32[label="#32 Merge : Merge42",shape=box, fillcolor=lightgrey, style=filled];
 node29 -> node32[labeldistance=2, color=red, fontcolor=red];
 node31 -> node32[labeldistance=2, color=red, fontcolor=red];
 node27 -> node32[labeldistance=2, color=green, constraint=false];
 node31 -> node32[labeldistance=2, color=green, constraint=false];
 node31[label="#31 ArrayStore : int[]",shape=box, fillcolor=lightgrey, style=filled];
 node9 -> node31[headlabel="*0", labeldistance=2];
 node0:prj3 -> node31[headlabel="*1", labeldistance=2];
 node6 -> node31[headlabel="*2", labeldistance=2];
 node22 -> node31[labeldistance=2, color=green, constraint=false];
 node30 -> node31[labeldistance=2, color=red, fontcolor=red];
 node30[label="#30 LabelNode",shape=box, fillcolor=lightgrey, style=filled];
 node25:prj28 -> node30[labeldistance=2, color=red, fontcolor=red];
 node9[label="#9 NewArray : int[]",shape=octagon, fillcolor=orange, style=filled];
 node8 -> node9[headlabel="*0", labeldistance=2];
 node0 -> node9[labeldistance=2, color=green, constraint=false];
 node8[label="#8 int 10",shape=octagon, fillcolor=lightgreen, style=filled];
 node4 -> node8[style=dotted];
 node4[label="#4 LabelNode",shape=box, fillcolor=lightgrey, style=filled];
 node0 -> node4[labeldistance=2, color=red, fontcolor=red];
 node7[label="#7 LabelNode",shape=box, fillcolor=lightgrey, style=filled];
 node4 -> node7[labeldistance=2, color=red, fontcolor=red];
 node12[label="#12 int 0",shape=octagon, fillcolor=lightgreen, style=filled];
 node7 -> node12[style=dotted];
 node13[label="#13 Î¦ int",shape=octagon, fillcolor=orange, style=filled];
 node0 -> node13[style=dotted];
 node12 -> node13[headlabel="if #7", labeldistance=2, color=blue, constraint=false];
 node35 -> node13[headlabel="if #33", labeldistance=2, color=blue, constraint=false, style=dashed];
 node35[label="#35 Add : int",shape=octagon, fillcolor=orange, style=filled];
 node13 -> node35[headlabel="*0", labeldistance=2];
 node34 -> node35[headlabel="*1", labeldistance=2];
 node34[label="#34 int 1",shape=octagon, fillcolor=lightgreen, style=filled];
 node32 -> node34[style=dotted];
 node15[label="#15 NumericCondition : GE",shape=octagon, fillcolor=orange, style=filled];
 node13 -> node15[headlabel="*0", labeldistance=2];
 node14 -> node15[headlabel="*1", labeldistance=2];
 node14[label="#14 int 10",shape=octagon, fillcolor=lightgreen, style=filled];
 node11 -> node14[style=dotted];
 node10[label="#10 ArrayLoad : int",shape=box, fillcolor=lightgrey, style=filled];
 node9 -> node10[headlabel="*0", labeldistance=2];
 node0:prj3 -> node10[headlabel="*1", labeldistance=2];
 node9 -> node10[labeldistance=2, color=green, constraint=false];
 node20[label="#20 ReturnValue : int",shape=box, fillcolor=lightgrey, style=filled];
 node10 -> node20[headlabel="*0", labeldistance=2];
 node19 -> node20[labeldistance=2, color=red, fontcolor=red];
 node10 -> node20[labeldistance=2, color=green, constraint=false];
 node19[label="#19 LabelNode",shape=box, fillcolor=lightgrey, style=filled];
 node16:prj17 -> node19[labeldistance=2, color=red, fontcolor=red];
 node29[label="#29 Goto",shape=box, fillcolor=lightgrey, style=filled];
 node27 -> node29[labeldistance=2, color=red, fontcolor=red];
 node21[label="#21 int 10",shape=octagon, fillcolor=lightgreen, style=filled];
 node16:prj18 -> node21[style=dotted];
 node23[label="#23 int 0",shape=octagon, fillcolor=lightgreen, style=filled];
 node22 -> node23[style=dotted];
 node24[label="#24 NumericCondition : EQ",shape=octagon, fillcolor=orange, style=filled];
 node0:prj2 -> node24[headlabel="*0", labeldistance=2];
 node23 -> node24[headlabel="*1", labeldistance=2];
 subgraph cluster_0 {
  color=lightgray;
  node11;
  node14;
 }
 subgraph cluster_1 {
  color=lightgray;
  node7;
  node12;
 }
 subgraph cluster_2 {
  color=lightgray;
  node4;
  node8;
 }
 subgraph cluster_3 {
  color=lightgray;
  node22;
  node23;
 }
 subgraph cluster_4 {
  color=lightgray;
  node21;
 }
 subgraph cluster_5 {
  color=lightgray;
  node32;
  node34;
 }
 subgraph cluster_6 {
  color=lightgray;
  node0;
  node13;
 }
 subgraph cluster_000 {
  label = "Legend";
  node [shape=point]
  {
   rank=same;
   c0 [style = invis];
   c1 [style = invis];
   c2 [style = invis];
   c3 [style = invis];
   d0 [style = invis];
   d1 [style = invis];
   d2 [style = invis];
   d3 [style = invis];
   d4 [style = invis];
   d5 [style = invis];
   d6 [style = invis];
   d7 [style = invis];
  }
  c0 -> c1 [label="Control flow", style=solid, color=red]
  c2 -> c3 [label="Control flow back edge", style=dashed, color=red]
  d0 -> d1 [label="Data flow"]
  d2 -> d3 [label="Declaration", style=dotted]
  d4 -> d5 [label="PHI Data flow", color=blue]
  d6 -> d7 [label="Memory flow", color=green]
 }

}

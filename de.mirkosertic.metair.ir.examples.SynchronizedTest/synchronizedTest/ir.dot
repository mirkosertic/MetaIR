digraph {
 ordering="in";
 node0[margin="0", label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="5"><tr><td colspan="1">#0 Method</td></tr><tr><td port="prj1" bgcolor="yellow">this : SynchronizedTest</td></tr></table>>,shape=none, fillcolor=lightgrey, style=filled];
 node17[label="#17 Throw",shape=box, fillcolor=lightgrey, style=filled];
 node6:prj9 -> node17[headlabel="*0", labeldistance=2];
 node16 -> node17[labeldistance=2, color=red, fontcolor=red];
 node0 -> node17[labeldistance=2, color=green, constraint=false];
 node16[label="#16 LabelNode",shape=box, fillcolor=lightgrey, style=filled];
 node11 -> node16[labeldistance=2, color=red, fontcolor=red];
 node11[label="#11 MonitorExit",shape=box, fillcolor=lightgrey, style=filled];
 node0:prj1 -> node11[headlabel="*0", labeldistance=2];
 node10 -> node11[labeldistance=2, color=red, fontcolor=red];
 node10[label="#10 LabelNode",shape=box, fillcolor=lightgrey, style=filled];
 node6 -> node10[labeldistance=2, color=red, fontcolor=red];
 node6[margin="0", label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="5"><tr><td colspan="1">#6 Catch : any</td></tr><tr><td port="prj9" bgcolor="yellow">exception : Throwable</td></tr></table>>,shape=none, fillcolor=lightgrey, style=filled];
 node4 -> node6[headlabel="*0", labeldistance=2];
 node4:prj5 -> node6[labeldistance=2, color=red, fontcolor=red];
 node4[margin="0", label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="5"><tr><td colspan="3">#4 ExceptionGuard</td></tr><tr><td port="prj5" bgcolor="yellow">catch : 0 : any</td><td port="prj7" bgcolor="yellow">default</td><td port="prj8" bgcolor="yellow">exit</td></tr></table>>,shape=none, fillcolor=lightgrey, style=filled];
 node3 -> node4[labeldistance=2, color=red, fontcolor=red];
 node3[label="#3 MonitorEnter",shape=box, fillcolor=lightgrey, style=filled];
 node0:prj1 -> node3[headlabel="*0", labeldistance=2];
 node2 -> node3[labeldistance=2, color=red, fontcolor=red];
 node2[label="#2 LabelNode",shape=box, fillcolor=lightgrey, style=filled];
 node0 -> node2[labeldistance=2, color=red, fontcolor=red];
 node14[label="#14 MonitorExit",shape=box, fillcolor=lightgrey, style=filled];
 node0:prj1 -> node14[headlabel="*0", labeldistance=2];
 node13 -> node14[labeldistance=2, color=red, fontcolor=red];
 node13[label="#13 Invoke virtual compute : (int)int",shape=box, fillcolor=lightgrey, style=filled];
 node0:prj1 -> node13[headlabel="*0", labeldistance=2];
 node12 -> node13[headlabel="*1", labeldistance=2];
 node4:prj7 -> node13[labeldistance=2, color=red, fontcolor=red];
 node0 -> node13[labeldistance=2, color=green, constraint=false];
 node12[label="#12 int 10",shape=octagon, fillcolor=lightgreen, style=filled];
 node4:prj7 -> node12[style=dotted];
 node20[label="#20 Return",shape=box, fillcolor=lightgrey, style=filled];
 node19 -> node20[labeldistance=2, color=red, fontcolor=red];
 node13 -> node20[labeldistance=2, color=green, constraint=false];
 node19[label="#19 LabelNode",shape=box, fillcolor=lightgrey, style=filled];
 node18 -> node19[labeldistance=2, color=red, fontcolor=red];
 node18[label="#18 Goto",shape=box, fillcolor=lightgrey, style=filled];
 node15 -> node18[labeldistance=2, color=red, fontcolor=red];
 node15[label="#15 Merge : EndOfGuardedBlock18",shape=box, fillcolor=lightgrey, style=filled];
 node14 -> node15[labeldistance=2, color=red, fontcolor=red];
 node4:prj8 -> node15[labeldistance=2, color=red, fontcolor=red];
 subgraph cluster_0 {
  color=lightgray;
  node12;
 }
 subgraph cluster_000 {
  label = "Legend";
  node [shape=point]
  {
   rank=same;
   c0 [style = invis];
   c1 [style = invis];
   c2 [style = invis];
   c3 [style = invis];
   d0 [style = invis];
   d1 [style = invis];
   d2 [style = invis];
   d3 [style = invis];
   d4 [style = invis];
   d5 [style = invis];
   d6 [style = invis];
   d7 [style = invis];
  }
  c0 -> c1 [label="Control flow", style=solid, color=red]
  c2 -> c3 [label="Control flow back edge", style=dashed, color=red]
  d0 -> d1 [label="Data flow"]
  d2 -> d3 [label="Declaration", style=dotted]
  d4 -> d5 [label="PHI Data flow", color=blue]
  d6 -> d7 [label="Memory flow", color=green]
 }

}
